services:
  iris-dev:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: always
    hostname: iris-dev
    container_name: iris-dev
    environment:
      - ISC_CPF_MERGE_FILE=/irisdev/app/merge.cpf

    command: 
      --check-caps false
    ports: 
      - 1972
      - 10000:52773
      - 53773
    volumes:
      - ./:/irisdev/app
      - ./src/grongier:/usr/irissys/mgr/python/grongier
      - ./src/iop:/usr/irissys/mgr/python/iop
      # - ./init.db/:/docker-entrypoint-initdb.d/
      - ./jdbc:/jdbc
    entrypoint: ["sh", "/irisdev/app/entrypoint.sh"]

  iris-prod-1:
    build: 
      context: ./iris-prod
      args:
      - TARGETARCH=${TARGETARCH}
    image: iris-prod
    restart: always
    init: true
    container_name: iris-prod-1
    hostname: iris-prod-1
    volumes:
    - ./iris-prod:/irisdev/app
    - ./iris-prod/init.db/:/docker-entrypoint-initdb.d/
    - ./jdbc:/jdbc
    - type: bind
      source: ./volumes
      target: /volumes
    - type: bind
      source: ./iris-prod
      target: /iris-prod-1
    - "/opt/cert:/opt/cert"
    - "/etc/localtime:/etc/localtime:ro"
    environment:
      - ISC_DATA_DIRECTORY=/volumes/iris-prod-1
    ports:
      - 10001:1972
    command: --key /iris-prod-1/key/iris.key -a /iris-prod-1/configure.sh
  
  iris-prod-2:
    image: iris-prod
    restart: always
    init: true
    container_name: iris-prod-2
    hostname: iris-prod-2
    volumes:
    - ./iris-prod:/irisdev/app
    - ./iris-prod/init.db/:/docker-entrypoint-initdb.d/
    - ./jdbc:/jdbc
    - type: bind
      source: ./volumes
      target: /volumes
    - type: bind
      source: ./iris-prod
      target: /iris-prod-2
    - "/opt/cert:/opt/cert"
    - "/etc/localtime:/etc/localtime:ro"
    environment:
      - ISC_DATA_DIRECTORY=/volumes/iris-prod-2
    ports:
      - 10002:1972
    command: --key /iris-prod-2/key/iris.key -a /iris-prod-2/configure.sh

  webgateway:
    image: ${WEBGATEWAY}
    init: true
    hostname: ${WEBGATEWAY_NAME}
    ports:
    - ${WEBGATEWAY_PORT_HTTP}:80
    - ${WEBGATEWAY_PORT_HTTPS}:443
    environment:
    - ISC_CSP_CONF_FILE=/webgateway/CSP.conf
    - ISC_CSP_INI_FILE=/webgateway/CSP.ini
    volumes:
    - type: bind
      source: ./webgateway
      target: /webgateway
    - "/opt/cert:/opt/cert"

  notebook:
    build: 
      context: notebook
      dockerfile: dockerfile
    ports:
      - "8889:8888"
    volumes:
      - ./notebook/Notebooks:/Notebooks
    command: "start-notebook.sh --NotebookApp.token='' --NotebookApp.password='' --notebook-dir=/Notebooks"

  postgres:
    container_name: training-postgres
    image: postgres
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./postgreSQL:/docker-entrypoint-initdb.d/
      - ./volumes/postgreSQL:/var/lib/postgresql/data
    ports:
      - 52004:5432
    restart: unless-stopped
    healthcheck:
        test: ["CMD", "pg_isready", "-U", "postgres"]
        interval: 30s
        timeout: 30s
        retries: 3
