    
    zn "IRISAPP"

    set sc = $SYSTEM.OBJ.LoadDir("/home/irisowner/dev/src","ck",,1)

    do ##class(Ens.Util.Statistics).EnableSAMForNamespace()
    do ##class(Ens.Util.Statistics).EnableStatsForProduction()

    do ##class(%File).CopyFile("/home/irisowner/dev/swagger-ui/index.html","/usr/irissys/csp/swagger-ui/index.html")
    
    Set ^Ens.Debug("UtilEnsMessages","sql")=1

    do ##class(Ens.Director).SetAutoStart("APP.production",0)

    set credentialsName = "interop"
    do ##class(Ens.Config.Credentials).SetCredential(credentialsName,"interop","SYS",1)

    #; set ^Ens.Config.DefaultSettingsD("APP.production","BO_SYNC_OSCAR_FHIR","*","HTTPServer")=$lb("iris-prod-1","",0)
    #; set ^Ens.Config.DefaultSettingsD("APP.production","BO_SYNC_OSCAR_FHIR","*","SSLCheckServerIdentity")=$lb("1","",0)

    zpm "install pex-embbeded-python"

    zn "%sys"
    set appName="/app"
    set crud("NameSpace") = "APP"
    set crud("DispatchClass") = "APP.REST"
    set crud("CookiePath") = appName
    set crud("Description") = "APP REST API"
    set crud("MatchRoles") = ":%All"
    set crud("AutheEnabled") = 96
    set crud("IsNameSpaceDefault") = 0
    set sc = ##class(Security.Applications).Create(appName, .crud)
    set step="Install " _  appName
    if 'sc { set ^["USER"]TRACE($zdt($now(),3,,6),step)=$lb($system.Status.GetErrorCodes(sc),$system.Status.GetErrorText(sc))} else { set ^["USER"]TRACE($zdt($now(),3,,6),step)="successful"}

    set namespace = "IRISAPP"
    set dbname = namespace_"X0001R"
    set step="DismountDatabase " _  dbname
    set ^["USER"]TRACE($zdt($now(),3,,6),step)="dismounting " _ dbname
    set sc =  ##class(SYS.Database).DismountDatabase("/usr/irissys/mgr/" _ dbname)
    set step="DismountDatabase " _  dbname
    if 'sc { set ^["USER"]TRACE($zdt($now(),3,,6),step)=$lb($system.Status.GetErrorCodes(sc),$system.Status.GetErrorText(sc))} else { set ^["USER"]TRACE($zdt($now(),3,,6),step)="successful"}

    set step="EncryptDatabase " _  dbname
    set ^["USER"]TRACE($zdt($now(),3,,6),step)="encrypting " _ dbname
    set sc =  ##class(SYS.Database).EncryptDatabase("/usr/irissys/mgr/" _ dbname)
    if 'sc { set ^["USER"]TRACE($zdt($now(),3,,6),step)=$lb($system.Status.GetErrorCodes(sc),$system.Status.GetErrorText(sc))} else { set ^["USER"]TRACE($zdt($now(),3,,6),step)="successful"}

    set step="MountDatabase " _  dbname
    set ^["USER"]TRACE($zdt($now(),3,,6),step)="mounting " _ dbname
    set sc =  ##class(SYS.Database).MountDatabase("/usr/irissys/mgr/" _ dbname)
    if 'sc { set ^["USER"]TRACE($zdt($now(),3,,6),step)=$lb($system.Status.GetErrorCodes(sc),$system.Status.GetErrorText(sc))} else { set ^["USER"]TRACE($zdt($now(),3,,6),step)="successful"}

    set dbname = namespace_"X0001V" 
    set step="DismountDatabase " _  dbname
    set ^["USER"]TRACE($zdt($now(),3,,6),step)="dismounting " _ dbname
    set sc =  ##class(SYS.Database).DismountDatabase("/usr/irissys/mgr/" _ dbname)
    set step="DismountDatabase " _  dbname
    if 'sc { set ^["USER"]TRACE($zdt($now(),3,,6),step)=$lb($system.Status.GetErrorCodes(sc),$system.Status.GetErrorText(sc))} else { set ^["USER"]TRACE($zdt($now(),3,,6),step)="successful"}

    set step="EncryptDatabase " _  dbname
    set ^["USER"]TRACE($zdt($now(),3,,6),step)="encrypting " _ dbname
    set sc =  ##class(SYS.Database).EncryptDatabase("/usr/irissys/mgr/" _ dbname)
    if 'sc { set ^["USER"]TRACE($zdt($now(),3,,6),step)=$lb($system.Status.GetErrorCodes(sc),$system.Status.GetErrorText(sc))} else { set ^["USER"]TRACE($zdt($now(),3,,6),step)="successful"}

    set step="MountDatabase " _  dbname
    set ^["USER"]TRACE($zdt($now(),3,,6),step)="mounting " _ dbname
    set sc =  ##class(SYS.Database).MountDatabase("/usr/irissys/mgr/" _ dbname)
    if 'sc { set ^["USER"]TRACE($zdt($now(),3,,6),step)=$lb($system.Status.GetErrorCodes(sc),$system.Status.GetErrorText(sc))} else { set ^["USER"]TRACE($zdt($now(),3,,6),step)="successful"}
 
    set ^["USER"]TRACE($zdt($now(),3,,6),"BUILD END")="IRISAPP"
    set ^["USER"]TRACE("BUILD DURATION")=##class(common.utils).hms($num($zh-^["USER"]TRACE("BUILD START"),0))
    set ^["USER"]VERSION = $zdt($now(),3,,6)

    halt
